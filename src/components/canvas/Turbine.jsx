/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/Spinner.glb')
  useFrame(() => {
    if (group.current)
      group.current.rotation.z += (((2 * Math.PI) / 1800) * 2) / 1.75
  })
  const [concrete] = useState(
    new THREE.MeshStandardMaterial({
      color: '#575757',
      lightMapIntensity: 0.1,
    })
  )
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <mesh
          scale={[0.00008, 0.00008, 0.00008]}
          position={[0, 0, -0.4]}
          rotation={[Math.PI / 2, -Math.PI / 2, -Math.PI / 2]}
          name='Asset3DLoadersceneRoot'
          geometry={nodes.Asset3DLoadersceneRoot.geometry}
          material={concrete}
          receiveShadow={false}
          castShadow={false}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/Spinner.glb')
